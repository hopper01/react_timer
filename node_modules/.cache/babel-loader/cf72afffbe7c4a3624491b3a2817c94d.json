{"ast":null,"code":"var _jsxFileName = \"/Users/hopper/Documents/reactJs/timer/src/components/timer/Timer.jsx\";\nimport React, { Component } from \"react\";\nimport Display from \"./Display\";\nimport Controls from \"./Controls\";\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: 0,\n      time: 0,\n      status: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n  }\n\n  onSecondsChanged(seconds) {\n    seconds = parseInt(seconds);\n\n    if (seconds && typeof seconds === 'number') {\n      if (seconds <= 359999) {\n        this.setState(() => ({\n          seconds: seconds,\n          time: seconds * 1000\n        }));\n      }\n    } else {\n      this.setState(() => ({\n        seconds: 0,\n        time: 0\n      }));\n    }\n  }\n\n  startTimer() {\n    if (this.state.status !== 'started') {\n      this.interval = setInterval(() => {\n        if (this.state.time !== 0) {\n          this.setState(prevState => ({\n            time: prevState.time - 10\n          }));\n        } else {\n          this.setState(() => ({\n            seconds: 0,\n            status: null,\n            time: 0\n          }));\n          clearInterval(this.interval);\n        }\n      }, 10);\n      this.setState(() => ({\n        status: 'started'\n      }));\n    }\n  }\n\n  stopTimer() {\n    if (this.state.status && this.state.status === 'started') {\n      clearInterval(this.interval);\n      this.setState(prevState => {\n        return {\n          status: 'stopped',\n          seconds: Math.floor(prevState.time / 1000)\n        };\n      });\n    }\n  }\n\n  resetTimer() {\n    clearInterval(this.interval);\n    this.setState(() => ({\n      seconds: 0,\n      time: 0,\n      status: null\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Display, {\n      seconds: this.state.seconds,\n      status: this.state.status,\n      time: this.state.time,\n      onSecondsChanged: this.onSecondsChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Controls, {\n      startTimer: this.startTimer,\n      stopTimer: this.stopTimer,\n      resetTimer: this.resetTimer,\n      status: this.state.status,\n      canStart: this.state.seconds > 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/hopper/Documents/reactJs/timer/src/components/timer/Timer.jsx"],"names":["React","Component","Display","Controls","Timer","constructor","props","state","seconds","time","status","handleChange","bind","startTimer","stopTimer","resetTimer","onSecondsChanged","parseInt","setState","interval","setInterval","prevState","clearInterval","Math","floor","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Display from \"./Display\";\nimport Controls from \"./Controls\";\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: 0,\n      time: 0,\n      status: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n  }\n  onSecondsChanged(seconds) {\n        seconds = parseInt(seconds);\n\n        if (seconds && typeof seconds === 'number') {\n            if (seconds <= 359999) {\n                this.setState(() => ({ seconds: seconds, time: seconds * 1000 }));\n            }\n        } else {\n            this.setState(() => ({ seconds: 0, time: 0 }));\n        }\n    }\n    startTimer(){\n        if (this.state.status !== 'started'){\n            this.interval = setInterval(() => {\n                if (this.state.time !== 0){\n                    this.setState(prevState => ({time: prevState.time -10}));\n                }\n                else{\n                    this.setState(() => ({ seconds: 0, status: null, time: 0 }));\n                    clearInterval(this.interval)\n                }\n            },10);\n            this.setState(() => ({status : 'started'}));\n        }\n    }\n\n        stopTimer() {\n        if (this.state.status && this.state.status === 'started') {\n\n            clearInterval(this.interval);\n\n            this.setState((prevState) => {\n                return ({\n                    status: 'stopped',\n                    seconds: Math.floor(prevState.time / 1000)\n                });\n            });\n        }\n    }\n\n    resetTimer(){\n        clearInterval(this.interval);\n        this.setState(() => ({seconds:0, time:0, status: null}));\n    }\n  render() {\n    return (\n             <div>\n                <Display seconds={this.state.seconds}\n                    status={this.state.status}\n                    time={this.state.time}\n                    onSecondsChanged={this.onSecondsChanged}>\n                    <div>\n                        <Controls startTimer={this.startTimer}\n                            stopTimer={this.stopTimer}\n                            resetTimer={this.resetTimer}\n                            status={this.state.status}\n                            canStart={this.state.seconds > 0} />\n                    </div>\n                </Display>\n            </div>\n    );\n  }\n}\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}