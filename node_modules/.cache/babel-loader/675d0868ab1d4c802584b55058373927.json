{"ast":null,"code":"var _jsxFileName = \"/Users/hopper/Documents/reactJs/timer/src/components/timer/Display.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Display = props => {\n  const onChange = e => {\n    props.onSecondChange(e.target.value);\n  };\n\n  const formatUnitOfTime = unitOfTime => {\n    return unitOfTime < 10 ? `0${unitOfTime}`.substring(0, 2) : unitOfTime.toString().substring(0, 2);\n  };\n\n  const getTime = timeInMilliseconds => {\n    let time = timeInMilliseconds;\n    const hours = this.formatUnitOfTime(Math.floor(time / (60 * 60 * 1000)));\n    time = time % (60 * 60 * 1000);\n    const minutes = this.formatUnitOfTime(Math.floor(time / (60 * 1000)));\n    time = time % (60 * 1000);\n    const seconds = this.formatUnitOfTime(Math.floor(time / 1000));\n    const milliseconds = this.formatUnitOfTime(time % 1000);\n    return `${hours}:${minutes}:${seconds}:${milliseconds}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, this.getTime(props.time)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"align-self-center display-time\",\n    maxLength: \"6\",\n    value: props.seconds,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })));\n};\n\nDisplay.defaultProps = {\n  seconds: 0,\n  onSecondChanged: e => console.log(e.target.value)\n};\nDisplay.propTypes = {\n  seconds: PropTypes.number.isRequired\n};\nexport default Display;","map":{"version":3,"sources":["/Users/hopper/Documents/reactJs/timer/src/components/timer/Display.jsx"],"names":["React","PropTypes","Display","props","onChange","e","onSecondChange","target","value","formatUnitOfTime","unitOfTime","substring","toString","getTime","timeInMilliseconds","time","hours","Math","floor","minutes","seconds","milliseconds","defaultProps","onSecondChanged","console","log","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACpBF,IAAAA,KAAK,CAACG,cAAN,CAAqBD,CAAC,CAACE,MAAF,CAASC,KAA9B;AACH,GAFD;;AAGC,QAAMC,gBAAgB,GAAIC,UAAD,IAAgB;AACtC,WAAOA,UAAU,GAAG,EAAb,GAAmB,IAAGA,UAAW,EAAf,CAAiBC,SAAjB,CAA2B,CAA3B,EAA6B,CAA7B,CAAlB,GAAoDD,UAAU,CAACE,QAAX,GAAsBD,SAAtB,CAAgC,CAAhC,EAAkC,CAAlC,CAA3D;AACH,GAFA;;AAGA,QAAME,OAAO,GAAIC,kBAAD,IAAwB;AAErC,QAAIC,IAAI,GAAGD,kBAAX;AAEA,UAAME,KAAK,GAAG,KAAKP,gBAAL,CAAsBQ,IAAI,CAACC,KAAL,CAAYH,IAAI,IAAI,KAAK,EAAL,GAAU,IAAd,CAAhB,CAAtB,CAAd;AAEAA,IAAAA,IAAI,GAAGA,IAAI,IAAI,KAAK,EAAL,GAAU,IAAd,CAAX;AACA,UAAMI,OAAO,GAAG,KAAKV,gBAAL,CAAsBQ,IAAI,CAACC,KAAL,CAAYH,IAAI,IAAI,KAAK,IAAT,CAAhB,CAAtB,CAAhB;AAEAA,IAAAA,IAAI,GAAGA,IAAI,IAAI,KAAK,IAAT,CAAX;AACA,UAAMK,OAAO,GAAG,KAAKX,gBAAL,CAAsBQ,IAAI,CAACC,KAAL,CAAYH,IAAI,GAAG,IAAnB,CAAtB,CAAhB;AAEA,UAAMM,YAAY,GAAG,KAAKZ,gBAAL,CAAsBM,IAAI,GAAG,IAA7B,CAArB;AAEA,WAAQ,GAAEC,KAAM,IAAGG,OAAQ,IAAGC,OAAQ,IAAGC,YAAa,EAAtD;AACH,GAfA;;AAgBF,sBACS;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+B,KAAKR,OAAL,CAAaV,KAAK,CAACY,IAAnB,CAA/B,CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACA,IAAA,SAAS,EAAG,gCADZ;AAEA,IAAA,SAAS,EAAG,GAFZ;AAGA,IAAA,KAAK,EAAIZ,KAAK,CAACiB,OAHf;AAIA,IAAA,QAAQ,EAAIhB,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFJ,CADT;AAaE,CApCL;;AAsCAF,OAAO,CAACoB,YAAR,GAAuB;AACnBF,EAAAA,OAAO,EAAE,CADU;AAEnBG,EAAAA,eAAe,EAAGlB,CAAD,IAAOmB,OAAO,CAACC,GAAR,CAAYpB,CAAC,CAACE,MAAF,CAASC,KAArB;AAFL,CAAvB;AAIAN,OAAO,CAACwB,SAAR,GAAoB;AAChBN,EAAAA,OAAO,EAAEnB,SAAS,CAAC0B,MAAV,CAAiBC;AADV,CAApB;AAGA,eAAe1B,OAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Display = (props) => {\n    const onChange = (e) => {\n        props.onSecondChange(e.target.value);\n    };\n     const formatUnitOfTime = (unitOfTime) => {\n        return unitOfTime < 10 ? `0${unitOfTime}`.substring(0,2) : unitOfTime.toString().substring(0,2);\n    }\n     const getTime = (timeInMilliseconds) => {\n\n        let time = timeInMilliseconds;\n        \n        const hours = this.formatUnitOfTime(Math.floor( time / (60 * 60 * 1000)));\n        \n        time = time % (60 * 60 * 1000);\n        const minutes = this.formatUnitOfTime(Math.floor( time / (60 * 1000)));\n        \n        time = time % (60 * 1000);\n        const seconds = this.formatUnitOfTime(Math.floor( time / 1000 ));\n        \n        const milliseconds = this.formatUnitOfTime(time % 1000);\n        \n        return `${hours}:${minutes}:${seconds}:${milliseconds}`;\n    }\n   return (\n            <div className='display'>\n                <div className=\"display-time\">{this.getTime(props.time)}</div>\n                <div className=\"input-time\">\n                <input \n                className = 'align-self-center display-time'\n                maxLength = '6'\n                value = {props.seconds}\n                onChange = {onChange}\n                />\n                </div>\n            </div>\n        );\n    }\n\nDisplay.defaultProps = {\n    seconds: 0,\n    onSecondChanged: (e) => console.log(e.target.value)\n};\nDisplay.propTypes = {\n    seconds: PropTypes.number.isRequired\n}\nexport default Display\n"]},"metadata":{},"sourceType":"module"}