{"ast":null,"code":"export default class Time {\n  getTime(timeInMilliseconds) {\n    let time = timeInMilliseconds;\n    const hours = this.formatUnitOfTime(Math.floor(time / (60 * 60 * 1000)));\n    time = time % (60 * 60 * 1000);\n    const minutes = this.formatUnitOfTime(Math.floor(time / (60 * 1000)));\n    time = time % (60 * 1000);\n    const seconds = this.formatUnitOfTime(Math.floor(time / 1000));\n    time = time % 1000;\n    const milliseconds = this.formatUnitOfTime(time % 1000);\n    return `${hours}:${minutes}:${seconds}:${milliseconds}`;\n  }\n\n  formatUnitOfTime(unitOfTime) {\n    return unitOfTime < 10 ? `0${unitOfTime}`.substring(0, 2) : unitOfTime.toString().substring(0, 2);\n  }\n\n}","map":{"version":3,"sources":["/Users/hopper/Documents/reactJs/timer/src/components/time/Time.js"],"names":["Time","getTime","timeInMilliseconds","time","hours","formatUnitOfTime","Math","floor","minutes","seconds","milliseconds","unitOfTime","substring","toString"],"mappings":"AAAA,eAAe,MAAMA,IAAN,CAAW;AAEtBC,EAAAA,OAAO,CAACC,kBAAD,EAAqB;AAExB,QAAIC,IAAI,GAAGD,kBAAX;AAEA,UAAME,KAAK,GAAG,KAAKC,gBAAL,CAAsBC,IAAI,CAACC,KAAL,CAAYJ,IAAI,IAAI,KAAK,EAAL,GAAU,IAAd,CAAhB,CAAtB,CAAd;AACAA,IAAAA,IAAI,GAAGA,IAAI,IAAI,KAAK,EAAL,GAAU,IAAd,CAAX;AAEA,UAAMK,OAAO,GAAG,KAAKH,gBAAL,CAAsBC,IAAI,CAACC,KAAL,CAAYJ,IAAI,IAAI,KAAK,IAAT,CAAhB,CAAtB,CAAhB;AACAA,IAAAA,IAAI,GAAGA,IAAI,IAAI,KAAK,IAAT,CAAX;AAEA,UAAMM,OAAO,GAAG,KAAKJ,gBAAL,CAAsBC,IAAI,CAACC,KAAL,CAAYJ,IAAI,GAAG,IAAnB,CAAtB,CAAhB;AACAA,IAAAA,IAAI,GAAGA,IAAI,GAAG,IAAd;AAEA,UAAMO,YAAY,GAAG,KAAKL,gBAAL,CAAsBF,IAAI,GAAG,IAA7B,CAArB;AAEA,WAAQ,GAAEC,KAAM,IAAGI,OAAQ,IAAGC,OAAQ,IAAGC,YAAa,EAAtD;AACH;;AAEDL,EAAAA,gBAAgB,CAACM,UAAD,EAAa;AACzB,WAAOA,UAAU,GAAG,EAAb,GAAmB,IAAGA,UAAW,EAAf,CAAiBC,SAAjB,CAA2B,CAA3B,EAA6B,CAA7B,CAAlB,GAAoDD,UAAU,CAACE,QAAX,GAAsBD,SAAtB,CAAgC,CAAhC,EAAkC,CAAlC,CAA3D;AACH;;AAtBqB","sourcesContent":["export default class Time {\n    \n    getTime(timeInMilliseconds) {\n\n        let time = timeInMilliseconds;\n        \n        const hours = this.formatUnitOfTime(Math.floor( time / (60 * 60 * 1000)));\n        time = time % (60 * 60 * 1000);\n        \n        const minutes = this.formatUnitOfTime(Math.floor( time / (60 * 1000))); \n        time = time % (60 * 1000);\n        \n        const seconds = this.formatUnitOfTime(Math.floor( time / 1000 ));\n        time = time % 1000;\n        \n        const milliseconds = this.formatUnitOfTime(time % 1000);\n        \n        return `${hours}:${minutes}:${seconds}:${milliseconds}`;\n    }\n\n    formatUnitOfTime(unitOfTime) {\n        return unitOfTime < 10 ? `0${unitOfTime}`.substring(0,2) : unitOfTime.toString().substring(0,2);\n    }\n}"]},"metadata":{},"sourceType":"module"}