{"ast":null,"code":"var _jsxFileName = \"/Users/hopper/Documents/reactJs/timer/src/components/timer/Display.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Time from '../time/Time';\nimport '.../styles/timer/display.css';\n\nconst Display = props => {\n  const time = new Time();\n\n  const onChange = e => {\n    props.onSecondsChanged(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 8\n    }\n  }, props.status === 'started' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, time.getTime(props.time)), props.status !== 'started' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"initial-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, time.getTime(props.time)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"align-self-center display-time\",\n    maxLength: \"6\",\n    value: props.seconds,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }))));\n};\n\nDisplay.defaultProps = {\n  seconds: 0,\n  status: null,\n  time: 0,\n  onSecondsChanged: e => console.log(e.target.value)\n};\nDisplay.propTypes = {\n  seconds: PropTypes.number.isRequired,\n  status: PropTypes.string,\n  time: PropTypes.number,\n  onSecondsChanged: PropTypes.func\n};\nexport default Display;","map":{"version":3,"sources":["/Users/hopper/Documents/reactJs/timer/src/components/timer/Display.jsx"],"names":["React","PropTypes","Time","Display","props","time","onChange","e","onSecondsChanged","target","value","status","getTime","seconds","defaultProps","console","log","propTypes","number","isRequired","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,8BAAP;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,QAAMC,IAAI,GAAG,IAAIH,IAAJ,EAAb;;AACA,QAAMI,QAAQ,GAAIC,CAAD,IAAO;AACpBH,IAAAA,KAAK,CAACI,gBAAN,CAAuBD,CAAC,CAACE,MAAF,CAASC,KAAhC;AACH,GAFD;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKN,KAAK,CAACO,MAAN,KAAiB,SAAjB,iBACA;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCN,IAAI,CAACO,OAAL,CAAaR,KAAK,CAACC,IAAnB,CADD,CAHL,EAQKD,KAAK,CAACO,MAAN,KAAiB,SAAjB,iBACA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCN,IAAI,CAACO,OAAL,CAAaR,KAAK,CAACC,IAAnB,CADD,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACI,IAAA,SAAS,EAAG,gCADhB;AAEI,IAAA,SAAS,EAAG,GAFhB;AAGI,IAAA,KAAK,EAAID,KAAK,CAACS,OAHnB;AAII,IAAA,QAAQ,EAAIP,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAJJ,CATL,CADJ;AA0BE,CA/BL;;AAgCAH,OAAO,CAACW,YAAR,GAAuB;AACnBD,EAAAA,OAAO,EAAE,CADU;AAEnBF,EAAAA,MAAM,EAAE,IAFW;AAGnBN,EAAAA,IAAI,EAAE,CAHa;AAInBG,EAAAA,gBAAgB,EAAGD,CAAD,IAAOQ,OAAO,CAACC,GAAR,CAAYT,CAAC,CAACE,MAAF,CAASC,KAArB;AAJN,CAAvB;AAOAP,OAAO,CAACc,SAAR,GAAoB;AAChBJ,EAAAA,OAAO,EAAEZ,SAAS,CAACiB,MAAV,CAAiBC,UADV;AAEhBR,EAAAA,MAAM,EAAEV,SAAS,CAACmB,MAFF;AAGhBf,EAAAA,IAAI,EAAEJ,SAAS,CAACiB,MAHA;AAIhBV,EAAAA,gBAAgB,EAAEP,SAAS,CAACoB;AAJZ,CAApB;AAMA,eAAelB,OAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Time from '../time/Time';\nimport '.../styles/timer/display.css'\n\n\nconst Display = (props) => {\n    const time = new Time();\n    const onChange = (e) => {\n        props.onSecondsChanged(e.target.value);\n    };\n   return (\n       <div className=\"clock\">\n       { \n            props.status === 'started' &&\n            <div className=\"display-time\">\n            {time.getTime(props.time)}\n            </div> \n       }\n       {\n            props.status !== 'started' && \n            <div className=\"initial-input\">\n                <div className=\"display-time\">\n                {time.getTime(props.time)}\n                </div>         \n                <div className=\"input-time\">\n                <input \n                    className = 'align-self-center display-time'\n                    maxLength = '6'\n                    value = {props.seconds}\n                    onChange = {onChange}\n                />\n                </div>\n            </div>\n        }\n        </div>\n        );\n    }\nDisplay.defaultProps = {\n    seconds: 0,\n    status: null,\n    time: 0,\n    onSecondsChanged: (e) => console.log(e.target.value)\n};\n\nDisplay.propTypes = {\n    seconds: PropTypes.number.isRequired,\n    status: PropTypes.string,\n    time: PropTypes.number,\n    onSecondsChanged: PropTypes.func\n};\nexport default Display\n"]},"metadata":{},"sourceType":"module"}