{"ast":null,"code":"var _jsxFileName = \"/Users/hopper/Documents/reactJs/timer/src/components/timer/Timer.jsx\";\nimport React, { Component } from 'react';\nimport Display from './Display';\nimport Controls from './Controls';\n\nclass Timer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      seconds: 0,\n      time: 0,\n      status: null\n    };\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n    this.onSecondsChanged = this.onSecondsChanged.bind(this);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  onSecondsChanged(seconds) {\n    seconds = parseInt(seconds);\n\n    if (seconds && typeof seconds === 'number') {\n      if (seconds <= 359999) {\n        this.setState(() => ({\n          seconds: seconds,\n          time: seconds * 1000\n        }));\n      }\n    } else {\n      this.setState(() => ({\n        seconds: 0,\n        time: 0\n      }));\n    }\n  }\n\n  startTimer() {\n    if (this.state.status !== 'started') {\n      this.interval = setInterval(() => {\n        if (this.state.time !== 0) {\n          this.setState(prevState => ({\n            time: prevState.time - 10\n          }));\n        } else {\n          this.setState(() => ({\n            seconds: 0,\n            status: null,\n            time: 0\n          }));\n          clearInterval(this.interval);\n        }\n      }, 10);\n      this.setState(() => ({\n        status: 'started'\n      }));\n    }\n  }\n\n  stopTimer() {\n    if (this.state.status && this.state.status === 'started') {\n      clearInterval(this.interval);\n      this.setState(prevState => {\n        return {\n          status: 'stopped',\n          seconds: Math.floor(prevState.time / 1000)\n        };\n      });\n    }\n  }\n\n  resetTimer() {\n    clearInterval(this.interval);\n    this.setState(() => ({\n      seconds: 0,\n      status: null,\n      time: 0\n    }));\n  }\n\n  render() {\n    const timer = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Display, {\n      seconds: this.state.seconds,\n      status: this.state.status,\n      time: this.state.time,\n      onSecondsChanged: this.onSecondsChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Controls, {\n      startTimer: this.startTimer,\n      stopTimer: this.stopTimer,\n      resetTimer: this.resetTimer,\n      status: this.state.status,\n      canStart: this.state.seconds > 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/hopper/Documents/reactJs/timer/src/components/timer/Timer.jsx"],"names":["React","Component","Display","Controls","Timer","constructor","state","seconds","time","status","startTimer","bind","stopTimer","resetTimer","onSecondsChanged","componentWillUnmount","clearInterval","interval","parseInt","setState","setInterval","prevState","Math","floor","render","timer","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Display from './Display';\nimport Controls from './Controls';\n\nclass Timer extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            seconds: 0,\n            time: 0,\n            status: null\n        };\n\n        this.startTimer = this.startTimer.bind(this);\n        this.stopTimer = this.stopTimer.bind(this);\n        this.resetTimer = this.resetTimer.bind(this);\n        this.onSecondsChanged = this.onSecondsChanged.bind(this);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    onSecondsChanged(seconds) {\n        seconds = parseInt(seconds);\n\n        if (seconds && typeof seconds === 'number') {\n            if (seconds <= 359999) {\n                this.setState(() => ({ seconds: seconds, time: seconds * 1000 }));\n            }\n        } else {\n            this.setState(() => ({ seconds: 0, time: 0 }));\n        }\n    }\n\n    startTimer() {\n        if (this.state.status !== 'started') {\n            this.interval = setInterval(() => {\n                if (this.state.time !== 0) {\n                    this.setState(prevState => ({ time: prevState.time - 10 }));\n                } else {\n                    this.setState(() => ({ seconds: 0, status: null, time: 0 }));\n\n                    clearInterval(this.interval);\n                }\n            }, 10);\n\n            this.setState(() => ({ status: 'started' }));\n        }\n    }\n\n    stopTimer() {\n        if (this.state.status && this.state.status === 'started') {\n\n            clearInterval(this.interval);\n\n            this.setState((prevState) => {\n                return ({\n                    status: 'stopped',\n                    seconds: Math.floor(prevState.time / 1000)\n                });\n            });\n        }\n    }\n\n    resetTimer() {\n        clearInterval(this.interval);\n\n        this.setState(() => ({ seconds: 0, status: null, time: 0 }));\n    }\n\n    render() {\n        const timer = this.props;\n        return (\n            <div>\n                <Display seconds={this.state.seconds}\n                    status={this.state.status}\n                    time={this.state.time}\n                    onSecondsChanged={this.onSecondsChanged}>\n                    <div>\n                        <Controls \n                            startTimer={this.startTimer}\n                            stopTimer={this.stopTimer}\n                            resetTimer={this.resetTimer}\n                            status={this.state.status}\n                            canStart={this.state.seconds > 0} />\n                    </div>\n                </Display>\n            </div>\n        );\n    }\n}\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}